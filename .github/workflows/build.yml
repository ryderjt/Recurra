name: Build macOS Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      APP_NAME: Recurra
      ARCHIVE_PATH: build/Recurra.xcarchive
      EXPORT_PATH: build/export
      EXPORT_PLIST: exportOptions.plist
      KEYCHAIN_PATH: "${{ runner.temp }}/recurra-signing.keychain-db"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Prepare build directories
        run: |
          rm -rf build
          mkdir -p build

      - name: Configure signing keychain
        env:
          CERT_BASE64: ${{ secrets.DEVELOPER_ID_CERTIFICATE_BASE64 }}
          CERT_PASSWORD: ${{ secrets.DEVELOPER_ID_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          if [ -z "$CERT_BASE64" ] || [ -z "$CERT_PASSWORD" ] || [ -z "$KEYCHAIN_PASSWORD" ]; then
            echo "Developer ID signing secrets are not configured." >&2
            exit 1
          fi

          CERT_PATH="$RUNNER_TEMP/developer_id_certificate.p12"
          echo "$CERT_BASE64" | base64 --decode > "$CERT_PATH"

          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security import "$CERT_PATH" -k "$KEYCHAIN_PATH" -P "$CERT_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security -T /usr/bin/xcodebuild
          security list-keychains -d user -s "$KEYCHAIN_PATH"
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

      - name: Select signing identity and team
        run: |
          if [ -z "${{ secrets.DEVELOPER_ID_IDENTITY }}" ]; then
            echo "Missing Developer ID identity secret." >&2
            exit 1
          fi
          if [ -z "${{ secrets.TEAM_ID }}" ]; then
            echo "Missing TEAM_ID secret." >&2
            exit 1
          fi

      - name: Update export options
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          plutil -replace teamID -string "$TEAM_ID" "$EXPORT_PLIST"

      - name: Archive app
        env:
          CODE_SIGN_IDENTITY: ${{ secrets.DEVELOPER_ID_IDENTITY }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          xcodebuild \
            -project Recurra/Recurra.xcodeproj \
            -scheme Recurra \
            -configuration Release \
            -archivePath "$ARCHIVE_PATH" \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" \
            DEVELOPMENT_TEAM="$TEAM_ID" \
            OTHER_CODE_SIGN_FLAGS="--keychain $KEYCHAIN_PATH" \
            clean archive

      - name: Export signed app
        env:
          CODE_SIGN_IDENTITY: ${{ secrets.DEVELOPER_ID_IDENTITY }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          xcodebuild \
            -exportArchive \
            -archivePath "$ARCHIVE_PATH" \
            -exportOptionsPlist "$EXPORT_PLIST" \
            -exportPath "$EXPORT_PATH" \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" \
            DEVELOPMENT_TEAM="$TEAM_ID"

      - name: Notarize app
        if: ${{ secrets.APPLE_ID != '' && secrets.APP_PASSWORD != '' }}
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          APP_PASSWORD: ${{ secrets.APP_PASSWORD }}
        run: |
          APP_BUNDLE="$EXPORT_PATH/$APP_NAME.app"
          ZIP_PATH="$RUNNER_TEMP/${APP_NAME}.zip"
          ditto -c -k --sequesterRsrc --keepParent "$APP_BUNDLE" "$ZIP_PATH"
          xcrun notarytool submit "$ZIP_PATH" \
            --apple-id "$APPLE_ID" \
            --team-id "$TEAM_ID" \
            --password "$APP_PASSWORD" \
            --wait
          xcrun stapler staple "$APP_BUNDLE"

      - name: Create DMG
        run: |
          create-dmg \
            --volname "$APP_NAME" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            "$EXPORT_PATH/$APP_NAME.app" \
            build/${APP_NAME}.dmg

      - name: Upload DMG artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.APP_NAME }}-${{ github.ref_name }}.dmg"
          path: build/${{ env.APP_NAME }}.dmg
          if-no-files-found: error
          retention-days: 14
