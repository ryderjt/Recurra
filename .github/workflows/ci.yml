name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Cache Xcode build artifacts
      uses: actions/cache@v3
      with:
        path: |
          ~/Library/Developer/Xcode/DerivedData
          ~/Library/Caches/com.apple.dt.Xcode
        key: ${{ runner.os }}-xcode-${{ hashFiles('**/project.pbxproj') }}
        restore-keys: |
          ${{ runner.os }}-xcode-
          
    - name: Build Debug
      run: |
        cd Recurra
        xcodebuild -project Recurra.xcodeproj \
          -scheme Recurra \
          -configuration Debug \
          -destination "platform=macOS" \
          build
          
    - name: Build Release
      run: |
        cd Recurra
        xcodebuild -project Recurra.xcodeproj \
          -scheme Recurra \
          -configuration Release \
          -destination "platform=macOS" \
          build
          
    - name: Archive
      run: |
        cd Recurra
        xcodebuild -project Recurra.xcodeproj \
          -scheme Recurra \
          -configuration Release \
          -destination "platform=macOS" \
          -archivePath Recurra.xcarchive \
          archive
          
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Recurra-archive
        path: Recurra/Recurra.xcarchive
        retention-days: 7

  test:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Detect test targets
      id: detect-tests
      run: |
        if grep -q 'com.apple.product-type.bundle.unit-test' Recurra/Recurra.xcodeproj/project.pbxproj; then
          echo "has_tests=true" >> "$GITHUB_OUTPUT"
        else
          echo "has_tests=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Run tests
      if: steps.detect-tests.outputs.has_tests == 'true'
      run: |
        cd Recurra
        xcodebuild test \
          -project Recurra.xcodeproj \
          -scheme Recurra \
          -destination "platform=macOS" \
          -resultBundlePath TestResults.xcresult

    - name: Upload test results
      if: steps.detect-tests.outputs.has_tests == 'true' && always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: Recurra/TestResults.xcresult
        retention-days: 7

    - name: Skip tests (no test targets)
      if: steps.detect-tests.outputs.has_tests != 'true'
      run: echo "No test targets detected; skipping xcodebuild test."

  lint:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Install SwiftLint
      run: |
        brew install swiftlint
        
    - name: Run SwiftLint
      run: |
        cd Recurra/Recurra
        swiftlint lint --reporter xcode
